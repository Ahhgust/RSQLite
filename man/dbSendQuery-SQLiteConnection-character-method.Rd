% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{dbSendQuery,SQLiteConnection,character-method}
\alias{dbGetPreparedQuery,SQLiteConnection,character,data.frame-method}
\alias{dbGetQuery,SQLiteConnection,character-method}
\alias{dbSendPreparedQuery,SQLiteConnection,character,data.frame-method}
\alias{dbSendQuery,SQLiteConnection,character-method}
\title{Execute a SQL statement on a database connection}
\usage{
\S4method{dbSendQuery}{SQLiteConnection,character}(conn, statement)

\S4method{dbSendPreparedQuery}{SQLiteConnection,character,data.frame}(conn,
  statement, bind.data)

\S4method{dbGetQuery}{SQLiteConnection,character}(conn, statement)

\S4method{dbGetPreparedQuery}{SQLiteConnection,character,data.frame}(conn,
  statement, bind.data)
}
\arguments{
\item{conn}{an \code{\linkS4class{SQLiteConnection}} object.}

\item{statement}{a character vector of length one specifying the SQL
statement that should be executed.  Only a single SQL statment should be
provided.}

\item{bind.data}{A data frame of data to be bound.}
}
\description{
These are the primary methods for interacting with a database via SQL
queries.
}
\examples{
con <- dbConnect(SQLite(), ":memory:")
dbWriteTable(con, "arrests", datasets::USArrests)

# Run query to get results as dataframe
dbGetQuery(con, "SELECT * FROM arrests limit 3")

# Send query to pull requests in batches
res <- dbSendQuery(con, "SELECT * FROM arrests")
data <- fetch(res, n = 2)
data
dbClearResult(res)

# Use dbSendPreparedQuery/dbGetPreparedQuery for "prepared" queries
dbGetPreparedQuery(con, "SELECT * FROM arrests WHERE Murder < ?",
   data.frame(x = 3))
dbGetPreparedQuery(con, "SELECT * FROM arrests WHERE Murder < (:x)",
   data.frame(x = 3))

dbDisconnect(con)
}

