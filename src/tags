!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/darren@hiebert.com/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://darren.hiebert.com/ctags/	/official site/
!_TAG_PROGRAM_VERSION	3.4	/with C, C++, Eiffel, Fortran, and Java  support/
ASSIGN_IN_FRAME	S4R.h	72;"	d
CHARACTER_TYPE	S4R.h	83;"	d
CHARACTER_TYPE	S4R.h	94;"	d
CHAR_DEREF	S4R.h	47;"	d
CHAR_DEREF	S4R.h	56;"	d
CHR_EL	S4R.h	136;"	d
CHR_EL	S4R.h	140;"	d
COMPLEX_TYPE	S4R.h	85;"	d
COMPLEX_TYPE	S4R.h	96;"	d
CON_HANDLE_TYPE	RS-DBI.h	/^  CON_HANDLE_TYPE = 2,     \/* dbConnection handle *\/$/;"	e	enum:enum_handle_type
CON_ID	RS-DBI.h	71;"	d
COPY	S4R.h	68;"	d
COPY_ALL	S4R.h	69;"	d
C_S_CPY	S4R.h	48;"	d
C_S_CPY	S4R.h	57;"	d
Con_Handle	RS-DBI.h	58;"	d
DBI_EXCEPTION	RS-DBI.h	/^} DBI_EXCEPTION;$/;"	t
DBL_EL	S4R.h	132;"	d
Db_Handle	RS-DBI.h	60;"	d
EVAL_IN_FRAME	S4R.h	70;"	d
FLT_EL	S4R.h	130;"	d
GET_CLASS_NAME	S4R.h	181;"	d
GET_FROM_FRAME	S4R.h	71;"	d
HANDLE_TYPE	RS-DBI.h	/^} HANDLE_TYPE; $/;"	t
INTEGER_DATA	S4R.h	102;"	d
INTEGER_DATA	S4R.h	103;"	d
INTEGER_TYPE	S4R.h	79;"	d
INTEGER_TYPE	S4R.h	90;"	d
INT_EL	S4R.h	128;"	d
IS_NA	S4R.h	169;"	d
IS_NA	S4R.h	173;"	d
LGL_EL	S4R.h	127;"	d
LIST_TYPE	S4R.h	86;"	d
LIST_TYPE	S4R.h	97;"	d
LOGICAL_TYPE	S4R.h	78;"	d
LOGICAL_TYPE	S4R.h	89;"	d
LST_CHR_EL	S4R.h	145;"	d
LST_DBL_EL	S4R.h	151;"	d
LST_EL	S4R.h	135;"	d
LST_EL	S4R.h	139;"	d
LST_FLT_EL	S4R.h	149;"	d
LST_INT_EL	S4R.h	147;"	d
LST_LGL_EL	S4R.h	146;"	d
LST_LST_EL	S4R.h	153;"	d
LST_NUM_EL	S4R.h	150;"	d
LST_RAW_EL	S4R.h	152;"	d
LST_SGL_EL	S4R.h	148;"	d
MEM_PROTECT	S4R.h	49;"	d
MEM_PROTECT	S4R.h	59;"	d
MEM_UNPROTECT	S4R.h	50;"	d
MEM_UNPROTECT	S4R.h	60;"	d
MEM_UNPROTECT_PTR	S4R.h	51;"	d
MEM_UNPROTECT_PTR	S4R.h	61;"	d
MGR_HANDLE_TYPE	RS-DBI.h	/^  MGR_HANDLE_TYPE = 1,     \/* dbManager handle *\/$/;"	e	enum:enum_handle_type
MGR_ID	RS-DBI.h	70;"	d
Mgr_Handle	RS-DBI.h	57;"	d
NA_CHR_SET	S4R.h	168;"	d
NA_CHR_SET	S4R.h	172;"	d
NA_SET	S4R.h	167;"	d
NA_SET	S4R.h	171;"	d
NUMERIC_TYPE	S4R.h	80;"	d
NUMERIC_TYPE	S4R.h	91;"	d
NUM_EL	S4R.h	131;"	d
RAW_DATA	S4R.h	58;"	d
RAW_EL	S4R.h	133;"	d
RAW_TYPE	S4R.h	98;"	d
REAL_TYPE	S4R.h	82;"	d
REAL_TYPE	S4R.h	93;"	d
RES_HANDLE_TYPE	RS-DBI.h	/^  RES_HANDLE_TYPE = 3      \/* dbResult handle *\/$/;"	e	enum:enum_handle_type
RES_ID	RS-DBI.h	72;"	d
RS_DBI_ERROR	RS-DBI.h	/^  RS_DBI_ERROR,$/;"	e	enum:enum_dbi_exception
RS_DBI_MAX_IDENTIFIER_LENGTH	RS-DBI.c	1162;"	d	file:
RS_DBI_MESSAGE	RS-DBI.h	/^  RS_DBI_MESSAGE,$/;"	e	enum:enum_dbi_exception
RS_DBI_SclassNames	RS-DBI.c	/^RS_DBI_SclassNames(s_object *type)$/;"	f
RS_DBI_TERMINATE	RS-DBI.h	/^  RS_DBI_TERMINATE$/;"	e	enum:enum_dbi_exception
RS_DBI_WARNING	RS-DBI.h	/^  RS_DBI_WARNING,$/;"	e	enum:enum_dbi_exception
RS_DBI_allocConnection	RS-DBI.c	/^RS_DBI_allocConnection(Mgr_Handle *mgrHandle, Sint max_res)$/;"	f
RS_DBI_allocFields	RS-DBI.c	/^RS_DBI_allocFields(int num_fields)$/;"	f
RS_DBI_allocManager	RS-DBI.c	/^RS_DBI_allocManager(const char *drvName, Sint max_con,$/;"	f
RS_DBI_allocOutput	RS-DBI.c	/^RS_DBI_allocOutput(s_object *output, RS_DBI_fields *flds,$/;"	f
RS_DBI_allocResultSet	RS-DBI.c	/^RS_DBI_allocResultSet(Con_Handle *conHandle)$/;"	f
RS_DBI_asConHandle	RS-DBI.c	/^RS_DBI_asConHandle(Sint mgrId, Sint conId)$/;"	f
RS_DBI_asMgrHandle	RS-DBI.c	/^RS_DBI_asMgrHandle(Sint mgrId)$/;"	f
RS_DBI_asResHandle	RS-DBI.c	/^RS_DBI_asResHandle(Sint mgrId, Sint conId, Sint resId)$/;"	f
RS_DBI_connection	RS-DBI.h	/^} RS_DBI_connection;$/;"	t
RS_DBI_connectionInfo	RS-DBI.c	/^RS_DBI_connectionInfo(Con_Handle *conHandle)$/;"	f
RS_DBI_copyString	RS-DBI.c	/^RS_DBI_copyString(const char *str)$/;"	f
RS_DBI_copyfields	RS-DBI.c	/^RS_DBI_copyfields(RS_DBI_fields *flds)$/;"	f
RS_DBI_createNamedList	RS-DBI.c	/^RS_DBI_createNamedList(char **names, Stype *types, Sint *lengths, Sint  n)$/;"	f
RS_DBI_errorMessage	RS-DBI.c	/^RS_DBI_errorMessage(char *msg, DBI_EXCEPTION exception_type)$/;"	f
RS_DBI_exception	RS-DBI.h	/^} RS_DBI_exception;$/;"	t
RS_DBI_fields	RS-DBI.h	/^} RS_DBI_fields;$/;"	t
RS_DBI_freeConnection	RS-DBI.c	/^RS_DBI_freeConnection(Con_Handle *conHandle)$/;"	f
RS_DBI_freeEntry	RS-DBI.c	/^RS_DBI_freeEntry(Sint *table, Sint indx)$/;"	f
RS_DBI_freeFields	RS-DBI.c	/^RS_DBI_freeFields(RS_DBI_fields *flds)$/;"	f
RS_DBI_freeManager	RS-DBI.c	/^RS_DBI_freeManager(Mgr_Handle *mgrHandle)$/;"	f
RS_DBI_freeResultSet	RS-DBI.c	/^RS_DBI_freeResultSet(Res_Handle *rsHandle)$/;"	f
RS_DBI_getConnection	RS-DBI.c	/^RS_DBI_getConnection(Con_Handle *conHandle)$/;"	f
RS_DBI_getFieldDescriptions	RS-DBI.c	/^RS_DBI_getFieldDescriptions(RS_DBI_fields *flds)$/;"	f
RS_DBI_getManager	RS-DBI.c	/^RS_DBI_getManager(Mgr_Handle *handle)$/;"	f
RS_DBI_getResultSet	RS-DBI.c	/^RS_DBI_getResultSet(Res_Handle *rsHandle)$/;"	f
RS_DBI_getTypeName	RS-DBI.c	/^RS_DBI_getTypeName(Sint t, const struct data_types table[])$/;"	f
RS_DBI_listEntries	RS-DBI.c	/^RS_DBI_listEntries(Sint *table, Sint length, Sint *entries)$/;"	f
RS_DBI_lookup	RS-DBI.c	/^RS_DBI_lookup(Sint *table, Sint length, Sint obj_id)$/;"	f
RS_DBI_makeDataFrame	RS-DBI.c	/^RS_DBI_makeDataFrame(s_object *data)$/;"	f
RS_DBI_makeSQLNames	RS-DBI.c	/^RS_DBI_makeSQLNames(s_object *snames)$/;"	f
RS_DBI_manager	RS-DBI.h	/^} RS_DBI_manager;$/;"	t
RS_DBI_managerInfo	RS-DBI.c	/^RS_DBI_managerInfo(Mgr_Handle *mgrHandle)$/;"	f
RS_DBI_nCopyString	RS-DBI.c	/^RS_DBI_nCopyString(const char *str, size_t len, int del_blanks)$/;"	f
RS_DBI_newEntry	RS-DBI.c	/^RS_DBI_newEntry(Sint *table, Sint length)$/;"	f
RS_DBI_resultSet	RS-DBI.h	/^} RS_DBI_resultSet;$/;"	t
RS_DBI_resultSetInfo	RS-DBI.c	/^RS_DBI_resultSetInfo(Res_Handle *rsHandle)$/;"	f
RS_DBI_setException	RS-DBI.c	/^RS_DBI_setException(Db_Handle *handle, DBI_EXCEPTION exceptionType,$/;"	f
RS_DBI_validHandle	RS-DBI.c	/^RS_DBI_validHandle(Db_Handle *handle)$/;"	f
RS_NA_STRING	RS-SQLite.c	27;"	d	file:
RS_NA_STRING	RS-SQLite.c	29;"	d	file:
RS_SQLITE_FETCH	RS-SQLite.h	34;"	d
RS_SQLITE_MAX_CON	RS-SQLite.h	33;"	d
RS_SQLite_allocConParams	RS-SQLite.c	/^RS_SQLite_allocConParams(const char *dbname, int mode)$/;"	f
RS_SQLite_cloneConnection	RS-SQLite.c	/^RS_SQLite_cloneConnection(Con_Handle *conHandle)$/;"	f
RS_SQLite_closeConnection	RS-SQLite.c	/^RS_SQLite_closeConnection(Con_Handle *conHandle)$/;"	f
RS_SQLite_closeManager	RS-SQLite.c	/^RS_SQLite_closeManager(Mgr_Handle *mgrHandle)$/;"	f
RS_SQLite_closeResultSet	RS-SQLite.c	/^RS_SQLite_closeResultSet(s_object *resHandle)$/;"	f
RS_SQLite_conParams	RS-SQLite.h	/^} RS_SQLite_conParams;$/;"	t
RS_SQLite_connectionInfo	RS-SQLite.c	/^RS_SQLite_connectionInfo(Con_Handle *conHandle)$/;"	f
RS_SQLite_createDataMappings	RS-SQLite.c	/^RS_SQLite_createDataMappings(Res_Handle *rsHandle)$/;"	f
RS_SQLite_exception	RS-SQLite.h	/^} RS_SQLite_exception;$/;"	t
RS_SQLite_exec	RS-SQLite.c	/^RS_SQLite_exec(Con_Handle *conHandle, s_object *statement, s_object *s_limit)$/;"	f
RS_SQLite_fetch	RS-SQLite.c	/^RS_SQLite_fetch(s_object *rsHandle, s_object *max_rec)$/;"	f
RS_SQLite_fieldTypes	RS-SQLite.h	/^const struct data_types RS_SQLite_fieldTypes[] = {$/;"	v
RS_SQLite_freeConParams	RS-SQLite.c	/^RS_SQLite_freeConParams(RS_SQLite_conParams *conParams)$/;"	f
RS_SQLite_freeException	RS-SQLite.c	/^RS_SQLite_freeException(RS_DBI_connection *con)$/;"	f
RS_SQLite_getException	RS-SQLite.c	/^RS_SQLite_getException(s_object *conHandle)$/;"	f
RS_SQLite_init	RS-SQLite.c	/^RS_SQLite_init(s_object *config_params, s_object *reload)$/;"	f
RS_SQLite_initFields	RS-SQLite.c	/^void RS_SQLite_initFields(RS_DBI_resultSet *res, int ncol, char **colNames) $/;"	f
RS_SQLite_managerInfo	RS-SQLite.c	/^RS_SQLite_managerInfo(Mgr_Handle *mgrHandle)$/;"	f
RS_SQLite_newConnection	RS-SQLite.c	/^RS_SQLite_newConnection(Mgr_Handle *mgrHandle, s_object *s_con_params)$/;"	f
RS_SQLite_resultSetInfo	RS-SQLite.c	/^RS_SQLite_resultSetInfo(Res_Handle *rsHandle)$/;"	f
RS_SQLite_setException	RS-SQLite.c	/^RS_SQLite_setException(RS_DBI_connection *con, int err_no, const char *err_msg)$/;"	f
RS_SQLite_stdCallback	RS-SQLite.c	/^RS_SQLite_stdCallback($/;"	f
RS_SQLite_typeNames	RS-SQLite.c	/^RS_SQLite_typeNames(s_object *typeIds)$/;"	f
RS_dataTypeTable	RS-DBI.c	/^const struct data_types RS_dataTypeTable[] = {$/;"	v
RS_is_na	RS-DBI.c	/^RS_is_na(void *ptr, Stype type)$/;"	f
RS_na_set	RS-DBI.c	/^RS_na_set(void *ptr, Stype type)$/;"	f
Res_Handle	RS-DBI.h	59;"	d
S4R_H	S4R.h	14;"	d
SET_CHR_EL	S4R.h	137;"	d
SET_CHR_EL	S4R.h	141;"	d
SET_CLASS_NAME	S4R.h	182;"	d
SET_CLASS_NAME	S4R.h	185;"	d
SET_ELEMENT	S4R.h	38;"	d
SET_ELEMENT	S4R.h	39;"	d
SET_LST_CHR_EL	S4R.h	157;"	d
SET_LST_CHR_EL	S4R.h	159;"	d
SET_ROWNAMES	S4R.h	180;"	d
SET_ROWNAMES	S4R.h	184;"	d
SGL_EL	S4R.h	129;"	d
SINGLE_TYPE	S4R.h	81;"	d
SINGLE_TYPE	S4R.h	92;"	d
SQL92_TYPE_BIT	RS-SQLite.h	/^     SQL92_TYPE_BIT,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_BIT_VAR	RS-SQLite.h	/^     SQL92_TYPE_BIT_VAR,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_CHAR	RS-SQLite.h	/^     SQL92_TYPE_CHAR,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_CHAR_VAR	RS-SQLite.h	/^     SQL92_TYPE_CHAR_VAR,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_DATE	RS-SQLite.h	/^     SQL92_TYPE_DATE,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_DATETIME	RS-SQLite.h	/^     SQL92_TYPE_DATETIME$/;"	e	enum:SQL92_field_types
SQL92_TYPE_DECIMAL	RS-SQLite.h	/^     SQL92_TYPE_DECIMAL,	$/;"	e	enum:SQL92_field_types
SQL92_TYPE_DOUBLE	RS-SQLite.h	/^     SQL92_TYPE_DOUBLE,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_FLOAT	RS-SQLite.h	/^     SQL92_TYPE_FLOAT,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_INTEGER	RS-SQLite.h	/^     SQL92_TYPE_INTEGER,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_NCHAR	RS-SQLite.h	/^     SQL92_TYPE_NCHAR,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_NCHAR_VAR	RS-SQLite.h	/^     SQL92_TYPE_NCHAR_VAR,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_NULL	RS-SQLite.h	/^     SQL92_TYPE_NULL,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_REAL	RS-SQLite.h	/^     SQL92_TYPE_REAL,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_SMALLINT	RS-SQLite.h	/^     SQL92_TYPE_SMALLINT,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_TIME	RS-SQLite.h	/^     SQL92_TYPE_TIME,$/;"	e	enum:SQL92_field_types
SQL92_TYPE_TIMESTAMP	RS-SQLite.h	/^     SQL92_TYPE_TIMESTAMP,$/;"	e	enum:SQL92_field_types
SQL92_field_types	RS-SQLite.h	/^enum SQL92_field_types {$/;"	g
STRING_TYPE	S4R.h	84;"	d
STRING_TYPE	S4R.h	95;"	d
S_NULL_ENTRY	S4R.h	104;"	d
S_NULL_ENTRY	S4R.h	105;"	d
S_NULL_ENTRY	S4R.h	107;"	d
Sclass	RS-DBI.h	/^  Stype *Sclass;        \/* R\/S class (type) -- may be overriden *\/$/;"	m	struct:st_sdbi_fields
Sint	S4R.h	45;"	d
Sint	S4R.h	54;"	d
Stype	S4R.h	77;"	d
Stype	S4R.h	88;"	d
USE_RINTERNALS	S4R.h	35;"	d
USING_S4	S4R.h	29;"	d
USING_SP5	S4R.h	27;"	d
_RS_DBI_H	RS-DBI.h	2;"	d
_RS_SQLite_H	RS-SQLite.h	2;"	d
charPtr	S4R.h	46;"	d
charPtr	S4R.h	55;"	d
compiled_sqlite_version	RS-SQLite.c	/^static char *compiled_sqlite_version = SQLITE_VERSION;$/;"	v	file:
completed	RS-DBI.h	/^  Sint  completed;       \/* have we fetched all rows? *\/$/;"	m	struct:st_sdbi_resultset
conParams	RS-DBI.h	/^  void  *conParams;      \/* pointer to connection params (host, user, etc)*\/$/;"	m	struct:st_sdbi_connection
connectionId	RS-DBI.h	/^  Sint   connectionId; $/;"	m	struct:st_sdbi_connection
connectionId	RS-DBI.h	/^  Sint  connectionId;    \/* validating stuff coming from S *\/$/;"	m	struct:st_sdbi_resultset
connectionIds	RS-DBI.h	/^  Sint *connectionIds;              \/* array of connectionIds *\/$/;"	m	struct:st_sdbi_manager
connections	RS-DBI.h	/^  RS_DBI_connection **connections;  \/* list of dbConnections *\/$/;"	m	struct:st_sdbi_manager
counter	RS-DBI.h	/^  Sint   counter;                    \/* total number of queries *\/$/;"	m	struct:st_sdbi_connection
counter	RS-DBI.h	/^  Sint counter;                     \/* num of connections handled so far*\/$/;"	m	struct:st_sdbi_manager
data_types	RS-DBI.h	/^struct data_types {$/;"	s
dbManager	RS-DBI.c	/^static RS_DBI_manager *dbManager = NULL;$/;"	v	file:
dbname	RS-SQLite.h	/^  char *dbname;$/;"	m	struct:st_sdbi_conParams
drvConnection	RS-DBI.h	/^  void  *drvConnection;  \/* pointer to the actual DBMS connection struct*\/$/;"	m	struct:st_sdbi_connection
drvData	RS-DBI.h	/^  void  *drvData;        \/* a pointer to driver-specific data *\/$/;"	m	struct:st_sdbi_resultset
drvData	RS-DBI.h	/^  void  *drvData;        \/* to be used at will by individual drivers *\/$/;"	m	struct:st_sdbi_connection
drvData	RS-DBI.h	/^  void *drvData;                    \/* to be used by the drv implementation*\/$/;"	m	struct:st_sdbi_manager
drvName	RS-DBI.h	/^  char *drvName;                    \/* what driver are we implementing?*\/$/;"	m	struct:st_sdbi_manager
drvResultSet	RS-DBI.h	/^  void  *drvResultSet;   \/* the actual (driver's) cursor\/result set *\/$/;"	m	struct:st_sdbi_resultset
enum_dbi_exception	RS-DBI.h	/^typedef enum enum_dbi_exception {$/;"	g
enum_handle_type	RS-DBI.h	/^typedef enum enum_handle_type {$/;"	g
errorMsg	RS-DBI.h	/^  char *errorMsg;           \/* SQL error message *\/$/;"	m	struct:st_sdbi_exception
errorMsg	RS-SQLite.h	/^   char *errorMsg;$/;"	m	struct:st_sqlite_err
errorNum	RS-DBI.h	/^  int  errorNum;            \/* SQL error number (possibly driver-dependent*\/$/;"	m	struct:st_sdbi_exception
errorNum	RS-SQLite.h	/^   int  errorNum;$/;"	m	struct:st_sqlite_err
exception	RS-DBI.h	/^  RS_DBI_exception *exception;    $/;"	m	struct:st_sdbi_manager
exception	RS-DBI.h	/^  RS_DBI_exception *exception;$/;"	m	struct:st_sdbi_connection
exceptionType	RS-DBI.h	/^  DBI_EXCEPTION  exceptionType; \/* one of RS_DBI_WARN, RS_RBI_ERROR, etc *\/$/;"	m	struct:st_sdbi_exception
fetch_default_rec	RS-DBI.h	/^  Sint fetch_default_rec;           \/* default num of records per fetch *\/$/;"	m	struct:st_sdbi_manager
fields	RS-DBI.h	/^  RS_DBI_fields *fields;$/;"	m	struct:st_sdbi_resultset
isSelect	RS-DBI.h	/^  Sint  isSelect;        \/* boolean for testing SELECTs *\/$/;"	m	struct:st_sdbi_resultset
isVarLength	RS-DBI.h	/^  Sint  *isVarLength;   \/* DBMS variable-length char type *\/$/;"	m	struct:st_sdbi_fields
is_validHandle	RS-DBI.c	/^is_validHandle(Db_Handle *handle, HANDLE_TYPE handleType)$/;"	f
length	RS-DBI.h	/^  Sint   length;                     \/* max num of concurrent resultSets *\/$/;"	m	struct:st_sdbi_connection
length	RS-DBI.h	/^  Sint  *length;        \/* DBMS lengths in bytes *\/$/;"	m	struct:st_sdbi_fields
length	RS-DBI.h	/^  Sint length;                      \/* max num of concurrent connections *\/$/;"	m	struct:st_sdbi_manager
managerId	RS-DBI.h	/^  Sint   managerId;$/;"	m	struct:st_sdbi_connection
managerId	RS-DBI.h	/^  Sint  managerId;       \/* the 3 *Id's are used for   *\/$/;"	m	struct:st_sdbi_resultset
managerId	RS-DBI.h	/^  Sint managerId;                   \/* typically, process id *\/$/;"	m	struct:st_sdbi_manager
mode	RS-SQLite.h	/^  int  mode;                     \/* unused by SQLite as of 2.0.5 used *\/$/;"	m	struct:st_sdbi_conParams
name	RS-DBI.h	/^  char  **name;         \/* DBMS field names *\/$/;"	m	struct:st_sdbi_fields
nullOk	RS-DBI.h	/^  Sint  *nullOk;        \/* DBMS indicator for DBMS'  NULL type *\/$/;"	m	struct:st_sdbi_fields
num_con	RS-DBI.h	/^  Sint num_con;                     \/* num of opened connections *\/$/;"	m	struct:st_sdbi_manager
num_fields	RS-DBI.h	/^  int num_fields;$/;"	m	struct:st_sdbi_fields
num_res	RS-DBI.h	/^  Sint   num_res;                    \/* num of open resultSets *\/$/;"	m	struct:st_sdbi_connection
precision	RS-DBI.h	/^  Sint  *precision;     \/* DBMS num of digits for numeric types *\/$/;"	m	struct:st_sdbi_fields
resultSetId	RS-DBI.h	/^  Sint  resultSetId;  $/;"	m	struct:st_sdbi_resultset
resultSetIds	RS-DBI.h	/^  Sint   *resultSetIds;$/;"	m	struct:st_sdbi_connection
resultSets	RS-DBI.h	/^  RS_DBI_resultSet  **resultSets;    \/* vector to result set ptrs  *\/$/;"	m	struct:st_sdbi_connection
rowCount	RS-DBI.h	/^  Sint  rowCount;        \/* rows fetched so far (SELECT-types)*\/$/;"	m	struct:st_sdbi_resultset
rowsAffected	RS-DBI.h	/^  Sint  rowsAffected;    \/* used by non-SELECT statements *\/$/;"	m	struct:st_sdbi_resultset
scale	RS-DBI.h	/^  Sint  *scale;         \/* DBMS num of decimals for numeric types *\/$/;"	m	struct:st_sdbi_fields
singl	S4R.h	44;"	d
singl	S4R.h	53;"	d
st_sdbi_conParams	RS-SQLite.h	/^typedef struct st_sdbi_conParams {$/;"	s
st_sdbi_connection	RS-DBI.h	/^typedef struct st_sdbi_connection {$/;"	s
st_sdbi_exception	RS-DBI.h	/^typedef struct st_sdbi_exception {$/;"	s
st_sdbi_fields	RS-DBI.h	/^typedef struct st_sdbi_fields {$/;"	s
st_sdbi_manager	RS-DBI.h	/^typedef struct st_sdbi_manager {$/;"	s
st_sdbi_resultset	RS-DBI.h	/^typedef struct st_sdbi_resultset {$/;"	s
st_sqlite_err	RS-SQLite.h	/^typedef struct st_sqlite_err {$/;"	s
statement	RS-DBI.h	/^  char  *statement;      \/* SQL statement *\/$/;"	m	struct:st_sdbi_resultset
type	RS-DBI.h	/^  Sint  *type;          \/* DBMS internal types *\/$/;"	m	struct:st_sdbi_fields
typeId	RS-DBI.h	/^    Sint typeId;$/;"	m	struct:data_types
typeName	RS-DBI.h	/^    char *typeName;$/;"	m	struct:data_types
